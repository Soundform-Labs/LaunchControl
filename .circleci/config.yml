# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

executors:
  macos-executor:
    macos:
      xcode: "26.0.0"
    resource_class: macos.m1.medium
  
  macos-xcode-16:
    macos:
      xcode: "16.4.0"
    resource_class: macos.m1.medium

jobs:
  build-xcframework:
    executor: macos-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            brew update
            brew install xcbeautify || true
      - run:
          name: Build XCFramework
          command: |
            mkdir -p build/logs

            xcodebuild archive \
              -scheme LaunchControl \
              -sdk iphoneos \
              -archivePath build/ios_devices.xcarchive \
              SKIP_INSTALL=NO \
              BUILD_LIBRARY_FOR_DISTRIBUTION=YES 2>&1 | tee build/logs/iphoneos.log

            xcodebuild archive \
              -scheme LaunchControl \
              -sdk iphonesimulator \
              -archivePath build/ios_simulators.xcarchive \
              SKIP_INSTALL=NO \
              BUILD_LIBRARY_FOR_DISTRIBUTION=YES 2>&1 | tee build/logs/iphonesimulator.log

            xcodebuild archive \
              -scheme LaunchControl \
              -sdk macosx \
              -archivePath build/macos.xcarchive \
              SKIP_INSTALL=NO \
              BUILD_LIBRARY_FOR_DISTRIBUTION=YES 2>&1 | tee build/logs/macos.log

            xcodebuild -create-xcframework \
              -framework build/ios_devices.xcarchive/Products/Library/Frameworks/LaunchControl.framework \
              -framework build/ios_simulators.xcarchive/Products/Library/Frameworks/LaunchControl.framework \
              -framework build/macos.xcarchive/Products/Library/Frameworks/LaunchControl.framework \
              -output build/LaunchControl.xcframework 2>&1 | tee build/logs/create-xcframework.log

      - store_artifacts:
          path: build/LaunchControl.xcframework
          destination: LaunchControl.xcframework

      - store_artifacts:
          path: build/logs
          destination: build-logs

  test-macOS:
    executor: macos-executor
    steps:
      - checkout
      - run:
          name: Run Unit Tests (macOS)
          command: |
            xcodebuild test \
              -scheme LaunchControl \
              -destination 'platform=macOS,arch=arm64' | tee test-macOS.log | xcbeautify
      - store_artifacts:
          path: test-macOS.log
          destination: test-macOS.log

  test-iPadOS:
    executor: macos-executor
    steps:
      - checkout
      - run:
          name: Run Unit Tests (iPadOS)
          command: |
            xcodebuild test \
              -scheme LaunchControl \
              -destination 'platform=iOS Simulator,name=iPad Pro (13-inch) (2th generation)' | tee test-iPadOS.log | xcbeautify
      - store_artifacts:
          path: test-iPadOS.log
          destination: test-iPadOS.log

  build-docc:
    executor: macos-xcode-16
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            brew update
            brew install xcbeautify || true
      - run:
          name: Build DocC Documentation
          command: |
            xcodebuild docbuild \
              -scheme LaunchControl \
              -destination 'platform=macOS' \
              -derivedDataPath build/DerivedData \
              -docbuild-output-path build/docc
      - run:
          name: Publish to GitHub Pages
          command: |
            git config --global user.email "ci-bot@example.com"
            git config --global user.name "CircleCI Bot"

            # Clone gh-pages branch or create it if missing
            git clone --branch gh-pages https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git gh-pages || \
              (git clone https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git gh-pages && cd gh-pages && git checkout --orphan gh-pages)

            rm -rf gh-pages/*
            cp -R build/docc/* gh-pages/
            cd gh-pages

            git add .
            git commit -m "(ci/automated): Update DocC docs from CircleCI build ${CIRCLE_SHA1}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git gh-pages
            echo "DocC documentation published to GitHub Pages"
      
workflows:
  build-and-test-workflow:
    jobs:
      - build-xcframework
      - test-macOS:
          requires:
            - build-xcframework
      - test-iPadOS:
          requires:
            - build-xcframework
  
#  build-and-deploy-docc:
#    jobs:
#      - build-docc:
#          filters:
#            branches:
#              only: main